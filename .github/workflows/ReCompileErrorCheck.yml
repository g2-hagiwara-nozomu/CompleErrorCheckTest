name: ReCheckCompileError
on:
  issue_comment:
    types: [created]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULL_REQ_URL: ${{ github.event.issue.url }}/comments
  GIT_SHA: ${{ github.sha }}
  GIT_ACTOR: ${{github.actor}}
  UNITY_VERSION: 2020.3.18f1
  PROJECT_PATH: ${{ github.workspace }}/CompleErrorCheskTest
jobs:
  build:
    name: Re Check Compile Error
    if: contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/recompile')
    runs-on: self-hosted
    steps:
      # リアクション
      - name: Reaction to comment
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { Octokit } = require('@octokit/rest');
            const token = process.env.GITHUB_TOKEN;
            const octokit = new Octokit({ auth: token });

            const { owner, repo, number } = process.env.GITHUB_EVENT_ISSUE;
            const comment_id = process.env.GITHUB_EVENT_COMMENT_ID;

            octokit.reactions.createForIssueComment({
              owner,
              repo,
              comment_id,
              content: 'rocket'
            });

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      # ブランチ名取得
      - name: Get Branch
        id: pullRequestBranch
        run: |
          echo "branchname=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" ${{ github.event.issue.pull_request.url }} | jq '.head.ref' | sed 's/\"//g')" >> $GITHUB_OUTPUT

      # チェックアウト
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          clean: false
          lfs: false
          ref: ${{ steps.pullRequestBranch.outputs.branchname }}

      # マージ後のチェックアウト
      - name: Checkout marged branch
        id: checkoutMerged
        if: ${{ !contains(github.event.comment.body, 'nonmerge') }}
        run: |
          git fetch origin '+refs/pull/${{ github.event.issue.number }}/merge:refs/remotes/pull/${{ github.event.issue.number }}/merge'
          git checkout --progress --force refs/remotes/pull/${{ github.event.issue.number }}/merge

      # 準備
      - name: Ready
        run: |
          echo Ready
          echo from $GITHUB_REF
          echo at ${{ github.workspace }}

      # Unityを開いてエラーチェック
      - name: Open Unity
        id: unity
        env:
          UNITY_PATH: /Applications/Unity/Hub/Editor/${{env.UNITY_VERSION}}/Unity.app/Contents/MacOS/Unity
        run: |
          echo cheking compile error 
          echo unity path : $UNITY_PATH 
          echo project path : $PROJECT_PATH 
          $UNITY_PATH -quit -batchmode  -projectPath $PROJECT_PATH

      # 失敗メッセージ作成
      - name: Create Error Message
        id: errorMsg
        if: failure()
        run: |
          if [ ${{ steps.unity.outcome }} == 'failure' ]; then
            echo "text=コンパイルエラーが発生しています。\n再度確認する場合は /recompile とコメントしてください。\n" >> $GITHUB_OUTPUT
          elif [ ${{ steps.checkoutMerged.outcome }} == 'failure' ]; then
            echo "text=コンパイルエラーの確認に失敗しました。cc @g2-hagiwara-nozomu \n簡易チェックを行う場合は「/recompile nonmerge」とコメントしてください。\n" >> $GITHUB_OUTPUT
          else
            echo "text=コンパイルエラーチェックの機能に問題があるようです。cc @g2-hagiwara-nozomu \nエラー内容を確認してください。\n" >> $GITHUB_OUTPUT
          fi

      # 失敗メッセージ送信
      - name: Post Comment GitHub PullRequest Page On Failed
        if: failure()
        env:
          TEXT: ${{ steps.errorMsg.outputs.text }}
        run: |
          curl -X POST \
               -H "Authorization: token ${GITHUB_TOKEN}" \
               -d "{\"body\": \"${TEXT} SHA:${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GIT_SHA} \"}" \
               ${PULL_REQ_URL}

      # 成功メッセージ送信
      - name: Post Comment GitHub PullRequest Page On Succeed
        if: success()
        env:
          TEXT: "コンパイルチェック問題なし"
        run: |
          curl -X POST \
               -H "Authorization: token ${GITHUB_TOKEN}" \
               -d "{\"body\": \"${TEXT} SHA:${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GIT_SHA} \"}" \
               ${PULL_REQ_URL}
